buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
}

group 'com.rcode3'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'application'

sourceCompatibility = 1.8

/**
 * This is used by the gradle run task to start Vertx.
 * By pointing at our own Main.kt file, this start Vertx with a typical
 * main method.
 *
 * Another approach is to use a Main verticle.
 */
//mainClassName = "$my_main_class"

/**
 * This is used by the gradle run task to start Vertx.
 * This points to the Vertx Launcher.
 *
 * Another approach is to use a standard class with a main method.
 * (see above)
 */
mainClassName = "$vertx_launcher"

run {
    args "run", "$my_main_verticle"
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "io.github.microutils:kotlin-logging:1.8.3"
    compile "org.slf4j:slf4j-jdk14:1.7.26"
    compile "io.vertx:vertx-core:$vertx_version"
    compile "io.vertx:vertx-lang-kotlin:$vertx_version"
    compile "io.vertx:vertx-sql-common:$vertx_version"
    compile "io.vertx:vertx-jdbc-client:$vertx_version"
    compile "io.vertx:vertx-rx-java2:$vertx_version"
    compile "com.markodevcic.kvalidation:KValidation:1.0.0"
    compile "io.reactiverse:reactive-pg-client:0.11.4"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.+"
    testCompile "com.opentable.components:otj-pg-embedded:0.13.1"
    testCompile "io.vertx:vertx-junit5:$vertx_version"
    testCompile "org.assertj:assertj-core:3.12.2"
    testCompile "com.ninja-squad:DbSetup-kotlin:2.1.0"
    // the jupiter-engine version needs to be kept in line with the vertx-junit5 dependency on junit
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.0.3"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {

        /**
         * To use our own main method to start vertx, this points the Main-Class at MainKt
         *
         * Another approach is to use a Main verticle.
         */
        //attributes 'Main-Class': "$my_main_class"

        /**
         * To use the built-in Vertx Launcher to start vertx, this points to the main class.
         *
         * Another approach is to use a class with a Main method. (see above)
         */
        attributes 'Main-Class': "$vertx_launcher"

        /**
         * This points the Vertx Launcher at our Main verticle.
         */
        attributes 'Main-Verticle': "$my_main_verticle"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree( it ) }
    }
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }
}
